// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace OmniCodedUITest.UIMaps.MainControlPanelClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class MainControlPanel
    {
        
        #region Properties
        public UIMainControlPanel UIMainControlPanel
        {
            get
            {
                if ((this.mUIMainControlPanel == null))
                {
                    this.mUIMainControlPanel = new UIMainControlPanel();
                }
                return this.mUIMainControlPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIMainControlPanel mUIMainControlPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMainControlPanel : WpfWindow
    {
        
        public UIMainControlPanel()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Home";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Home");
            #endregion
        }
        
        #region Properties
        public WpfButton UIMainMenu
        {
            get
            {
                if ((this.mUIMainMenu == null))
                {
                    this.mUIMainMenu = new WpfButton(this);
                    #region Search Criteria
                    this.mUIMainMenu.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUIMainMenu;
            }
        }
        
        public WpfButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        
        public WpfImage UIPersonifyLogo
        {
            get
            {
                if ((this.mUIPersonifyLogo == null))
                {
                    this.mUIPersonifyLogo = new WpfImage(this);
                    #region Search Criteria
                    this.mUIPersonifyLogo.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUIPersonifyLogo;
            }
        }
        
        public WpfToggleButton UIStartCallToogleButton
        {
            get
            {
                if ((this.mUIStartCallToogleButton == null))
                {
                    this.mUIStartCallToogleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mUIStartCallToogleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "start_call_btn";
                    this.mUIStartCallToogleButton.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUIStartCallToogleButton;
            }
        }
        
        public WpfToggleButton UIJoinCallToggleButton
        {
            get
            {
                if ((this.mUIJoinCallToggleButton == null))
                {
                    this.mUIJoinCallToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mUIJoinCallToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "join_call_btn";
                    this.mUIJoinCallToggleButton.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUIJoinCallToggleButton;
            }
        }
        
        public WpfToggleButton UIScreenRecordingToggleButton
        {
            get
            {
                if ((this.mUIScreenRecordingToggleButton == null))
                {
                    this.mUIScreenRecordingToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mUIScreenRecordingToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "screen_recording_btn";
                    this.mUIScreenRecordingToggleButton.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUIScreenRecordingToggleButton;
            }
        }
        
        public WpfButton UINewCallButton
        {
            get
            {
                if ((this.mUINewCallButton == null))
                {
                    this.mUINewCallButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUINewCallButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "New Call";
                    this.mUINewCallButton.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUINewCallButton;
            }
        }
        
        public WpfButton UIRecentCallsButton
        {
            get
            {
                if ((this.mUIRecentCallsButton == null))
                {
                    this.mUIRecentCallsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIRecentCallsButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Recent Calls";
                    this.mUIRecentCallsButton.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUIRecentCallsButton;
            }
        }
        
        public WpfImage UIPasteMeetingIcon
        {
            get
            {
                if ((this.mUIPasteMeetingIcon == null))
                {
                    this.mUIPasteMeetingIcon = new WpfImage(this);
                    #region Search Criteria
                    this.mUIPasteMeetingIcon.SearchProperties[WpfImage.PropertyNames.Instance] = "2";
                    this.mUIPasteMeetingIcon.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUIPasteMeetingIcon;
            }
        }
        
        public WpfText UIMeetingLinkEdit
        {
            get
            {
                if ((this.mUIMeetingLinkEdit == null))
                {
                    this.mUIMeetingLinkEdit = new WpfText(this);
                    #region Search Criteria
                    this.mUIMeetingLinkEdit.SearchProperties[WpfText.PropertyNames.AutomationId] = "UsernameWatermark";
                    this.mUIMeetingLinkEdit.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUIMeetingLinkEdit;
            }
        }
        
        public WpfButton UINewRecordingButton
        {
            get
            {
                if ((this.mUINewRecordingButton == null))
                {
                    this.mUINewRecordingButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUINewRecordingButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "New Recording";
                    this.mUINewRecordingButton.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUINewRecordingButton;
            }
        }
        
        public WpfButton UIPreviousButton
        {
            get
            {
                if ((this.mUIPreviousButton == null))
                {
                    this.mUIPreviousButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIPreviousButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Previous";
                    this.mUIPreviousButton.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUIPreviousButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIMainMenu;
        
        private WpfButton mUICloseButton;
        
        private WpfImage mUIPersonifyLogo;
        
        private WpfToggleButton mUIStartCallToogleButton;
        
        private WpfToggleButton mUIJoinCallToggleButton;
        
        private WpfToggleButton mUIScreenRecordingToggleButton;
        
        private WpfButton mUINewCallButton;
        
        private WpfButton mUIRecentCallsButton;
        
        private WpfImage mUIPasteMeetingIcon;
        
        private WpfText mUIMeetingLinkEdit;
        
        private WpfButton mUINewRecordingButton;
        
        private WpfButton mUIPreviousButton;
        #endregion
    }
}
